// Create texturized background
//const backgroundTexture = new THREE.TextureLoader().load('./images/bamboo.jpg');

// --------------------------
// Additional Scene Effects
// --------------------------

/*
// Populate background with random cherry blossoms
// Idea: have the petals float across the screen
function addPetal() 
{
  const geometry = new THREE.SphereGeometry(0.25, 24, 24);
  const material = new THREE.MeshStandardMaterial({color: 0xF8C8DC});
  const star = new THREE.Mesh(geometry, material);

  const [x, y, z] = Array(3).fill().map(() => THREE.MathUtils.randFloatSpread(100));
  star.position.set(x,y,z);
  scene.add(star);
}
// Add 200 petals
Array(200).fill().forEach(addPetal);
*/


/*
// Model Loader
/*
function loadModel(m_name)
{
  const loader = new GLTFLoader();
  loader.load(m_name, (gltf) => {
    gltf.scene.traverse(c => {
      c.castShadow = true;
    });
    gltf.scene.rotation.y = Math.PI/3; // Rotate around x-axis by 90 degrees
    scene.add(gltf.scene);
  });
}

// Load complete model
loadModel("./models/treeBase.gltf"); // Tree base
loadModel("./models/treeLeaves.gltf"); // Tree leaves
loadModel("./models/floatingIsland.gltf"); // Floating Island
loadModel("./models/rockPool.gltf"); // Rock pool
loadModel("./models/smallRocks.gltf"); // Small rocks
loadModel("./models/bushes.gltf"); // Bushes
loadModel("./models/water.gltf"); // Water
*/



/*
// --------------------------
// Load complete model Assets
// --------------------------
const loader = new GLTFLoader();

// Load floating island
var island;
loader.load("./models/floatingIsland.gltf", function (gltf) {
  gltf.scene.traverse(c => {
    c.castShadow = true;
  });
  gltf.scene.rotation.y = Math.PI/3; // Rotate around x-axis by 90 degrees
  island = gltf.scene;
  scene.add(island);
});

// Load tree model
var treeBase, treeLeaves;
// Tree base
loader.load("./models/treeBase.gltf", function (gltf) {
  gltf.scene.traverse(c => {
    c.castShadow = true;
  });
  gltf.scene.rotation.y = Math.PI/3; // Rotate around x-axis by 90 degrees
  treeBase = gltf.scene;
  scene.add(treeBase);
});
// Tree Leaves
loader.load("./models/treeLeaves.gltf", function (gltf) {
  gltf.scene.traverse(c => {
    c.castShadow = true;
  });
  gltf.scene.rotation.y = Math.PI/3; // Rotate around x-axis by 90 degrees
  treeLeaves = gltf.scene;
  scene.add(treeLeaves);
});

// Load hotsprings rock pool
var rockPool, water;
// Rock Pool
loader.load("./models/rockPool.gltf", function (gltf) {
  gltf.scene.traverse(c => {
    c.castShadow = true;
  });
  gltf.scene.rotation.y = Math.PI/3; // Rotate around x-axis by 90 degrees
  rockPool = gltf.scene;
  scene.add(rockPool);
});
// Water
loader.load("./models/water.gltf", function (gltf) {
  gltf.scene.traverse(c => {
    c.castShadow = true;
  });
  gltf.scene.rotation.y = Math.PI/3; // Rotate around x-axis by 90 degrees
  water = gltf.scene;
  scene.add(water);
});

// Misc details
var bushes, rocks;
// Bushes
loader.load("./models/bushes.gltf", function (gltf) {
  gltf.scene.traverse(c => {
    c.castShadow = true;
  });
  gltf.scene.rotation.y = Math.PI/3; // Rotate around x-axis by 90 degrees
  bushes = gltf.scene;
  scene.add(bushes);
});
// Small rocks
loader.load("./models/smallRocks.gltf", function (gltf) {
  gltf.scene.traverse(c => {
    c.castShadow = true;
  });
  gltf.scene.rotation.y = Math.PI/3; // Rotate around x-axis by 90 degrees
  rocks = gltf.scene;
  scene.add(rocks);
});
*/
